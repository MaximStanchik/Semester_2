//Вариант 24
//x^3+8*x-6=0
//точность 0.01
//x=0.625
//a=0
//b=1
                                                               //Задание:
                                      //Определить корни уравнения графически и уточнить один из них ите-
                                      //рационными методами(методом деления отрезка пополам, методом Нью -
                                      //тона, методом простой итерации) с точностью 0,01:



#include <iostream>
#include <cmath>
#include <iomanip> //разобраться для чего нужна

using namespace std;

float eps = 0.01;

double f(double x)
{
    return x * x * x + 8 * x - 6;
}

double df_1(double x) { // первая производная функции
    return 3 * x * x + 8;
}

double df_2(double x) { // вторая производная функции
    return 3 * x * x + 8;
}

int main() {
    setlocale(LC_ALL, "Russian");
    int exit = 0, i = 0;//переменные для выхода и цикла
    double x0, xn;// вычисляемые приближения для корня
    double a, b;// границы отрезкa

    do {
        i = 0;
        // вводим границы отрезка, на котором будем искать корень
        cout << "Введите значение а: ";
        cin >> a;
        cout << "Введите значение b: ";
        cin >> b;
        if (a > b) // если пользователь перепутал границы отрезка, меняем их местами
        {
            x0 = a;
            a = b;
            b = x0;
        }
        if (f(a) * f(b) > 0) // если знаки функции на краях отрезка одинаковые, то здесь нет корня
            cout << "\nОшибка! Отсутствие корней на интервале!\n";
        else
        {
            if (f(a) * df_2(a) > 0) x0 = a; // для выбора начальной точки проверяем f(x0)*df_2(x0)>0 ?
            else x0 = b;
            xn = x0 - f(x0) / df_1(x0); // считаем первое приближение
            cout << ++i << "-ое повторение = " << xn << "\n";
            while (fabs(x0 - xn) > eps) // пока не достигнем необходимой точности, будет продолжать вычислять
            {
                x0 = xn;
                xn = x0 - f(x0) / df_1(x0); // непосредственно формула Ньютона
                cout << ++i << "-ое повторение = " << xn << "\n";
            }
            cout << "\nПриблизительное значение корня = " << xn; // вывод вычисленного корня
        }
        cout << "Нажмите клавишу:" << endl;
        cout << "1--выход; любая другая--продолжение вычислений" << endl;
        cout << "\nВыход?=>";
        cin >> exit;

    } while (exit != 1); // пока пользователь не ввел exit = 1

    return 0;
}